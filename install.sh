#!/usr/bin/env bash
set -euo pipefail

OS="$(uname -s)"

log() { printf "\033[1;32m[+]\033[0m %s\n" "$*"; }
warn() { printf "\033[1;33m[!]\033[0m %s\n" "$*"; }
err() { printf "\033[1;31m[-]\033[0m %s\n" "$*"; }

# Homebrew installation
ensure_homebrew() {
  if [ "$OS" != "Darwin" ]; then return 0; fi

  if command -v brew >/dev/null 2>&1; then
    log "Homebrew already installed: $(brew --version | head -n1)"
    return 0
  fi

  log "Installing Homebrew..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

  if [ -x /opt/homebrew/bin/brew ]; then
    BREW_BIN="/opt/homebrew/bin/brew"
  else
    BREW_BIN="/usr/local/bin/brew"
  fi

  # Configure shell environment for fish and bash
  FISH_CONF_DIR="${HOME}/.config/fish/conf.d"
  mkdir -p "$FISH_CONF_DIR"
  BREW_FISH="${FISH_CONF_DIR}/brew.fish"
  if ! grep -q "brew shellenv" "$BREW_FISH" 2>/dev/null; then
    log "Adding brew shellenv for fish → ${BREW_FISH}"
    {
      echo "# Auto-generated by install.sh"
      echo "test -x ${BREW_BIN}; and ${BREW_BIN} shellenv | source"
    } > "$BREW_FISH"
  fi

  BASH_PROFILE="${HOME}/.bash_profile"
  touch "$BASH_PROFILE"
  if ! grep -q 'brew shellenv' "$BASH_PROFILE"; then
    log "Adding brew shellenv for bash → ${BASH_PROFILE}"
    echo "eval \"\$(${BREW_BIN} shellenv)\"" >> "$BASH_PROFILE"
  fi

  # Export for current script execution
  eval "$(${BREW_BIN} shellenv)"
  log "Homebrew installed: $(brew --version | head -n1)"
}

install_macos() {
  ensure_homebrew
  log "brew update && install base packages"

  brew update
  brew bundle --file="${HOME}/Brewfile"
}

case "$OS" in
  Darwin) install_macos ;;
  *) err "Unsupported OS: $OS"; exit 1 ;;
esac

--- Neovim providers ---
 if command -v npm >/dev/null 2>&1; then
  log "Ensure Node provider (neovim npm)"
  npm -g ls neovim >/dev/null 2>&1 || npm install -g neovim
fi

# Uncomment when needed
# if command -v python3 >/dev/null 2>&1; then
#   log "Ensure Python provider (pynvim)"
#   python3 -m pip install --user --upgrade pynvim
# fi

# --- Fish shell: set as default
FISH_BIN="$(command -v fish || true)"
if [ -z "${FISH_BIN}" ]; then
  err "fish not installed (something went wrong above)"; exit 1
fi

if ! grep -q "^${FISH_BIN}$" /etc/shells 2>/dev/null; then
  log "Adding ${FISH_BIN} to /etc/shells"
  echo "${FISH_BIN}" | sudo tee -a /etc/shells >/dev/null
fi

if [ "${SHELL:-}" != "${FISH_BIN}" ]; then
  log "Setting fish as default shell"
  chsh -s "${FISH_BIN}"
fi

# Fisher: plugin manager for fish
if fish -ls "type -q fisher" >/dev/null 2>&1; then
  log "Fisher detected → syncing plugins"
  fish -lc "fisher update"
else
  log "Installing Fisher (fish plugin manager)"
  curl -sL https://git.io/fisher | source && fish -lc "fisher install jorgebucaran/fisher"
  fish -lc "fisher update"
fi

# Neovim: headless sync plugins and Treesitter parsers
log "Syncing Neovim plugins (Lazy) and Treesitter parsers"
nvim --headless "+Lazy! sync" "+TSUpdateSync" +qa

log "Done. Restart your terminal to apply fish and brew environment."

